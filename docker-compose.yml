version: '3.8'

services:
  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - app-network
    environment:
      - VITE_API_URL=http://localhost:8080

  backend:
    build: ./backend
    volumes:
      - ./backend:/var/www/html
      - /var/www/html/vendor
    depends_on:
      - db
    networks:
      - app-network
    environment:
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=5432
      - APP_ENV=${APP_ENV:-dev}

  nginx:
    image: nginx:alpine
    ports:
      - "8080:80"
    volumes:
      - ./backend:/var/www/html
      - ./backend/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
    networks:
      - app-network

  worker:
    build: ./backend
    volumes:
      - ./backend:/var/www/html
      - /var/www/html/vendor
    depends_on:
      - db
      - backend
    networks:
      - app-network
    command: ["php", "bin/worker.php"]
    environment:
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=5432
      - APP_ENV=${APP_ENV:-dev}

  db:
    image: postgres:14-alpine
    ports:
      - "5432:5432"
    networks:
      - app-network
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  db_data: 